version: '2.1'

volumes:
  pgmaster:
    driver: "${VOLUME_DRIVER}"
  pgslave:
    driver: "${VOLUME_DRIVER}"
networks:
  postgres-network:

services:
  pgmaster:
    image: xingjiudong/postgres:${POSTGRES_VERSION}
    environment:
      - PARTNER_NODES=pgmaster,pgslave
      - NODE_ID=1
      - NODE_NAME=node1
      - CLUSTER_NODE_NETWORK_NAME=pgmaster
      - NODE_PRIORITY=100
      - SSH_ENABLE=1
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - CLEAN_OVER_REWIND=0
      - CONFIGS=listen_addresses:'*',max_replication_slots:5
      - CLUSTER_NAME=${CLUSTER_NAME}
      - REPLICATION_DB=${REPLICATION_DB}
      - REPLICATION_USER=${REPLICATION_USER}
      - REPLICATION_PASSWORD=${REPLICATION_PASSWORD}
    ports:
      - 5432
    volumes:
      - pgmaster:/var/lib/postgresql/data
    networks:
      - postgres-network
  pgslave:
    image: xingjiudong/postgres:${POSTGRES_VERSION}
    environment:
      - affinity:container!=pgmaster
      - PARTNER_NODES=pgmaster,pgslave
      - REPLICATION_PRIMARY_HOST=pgmaster
      - NODE_ID=2
      - NODE_NAME=node2
      - CLUSTER_NODE_NETWORK_NAME=pgslave
      - CLEAN_OVER_REWIND=1
      - CONFIGS=max_replication_slots:10
    ports:
      - 5432
    volumes:
      - pgslave:/var/lib/postgresql/data
    networks:
      - postgres-network
  pgpool:
    image: xingjiudong/pgpool:${PGPOOL_VERSION}
    environment:
      constraint:node: =${PGPOOL_HOST}
      PCP_USER: ${PCP_USER}
      PCP_PASSWORD: ${PCP_PASSWORD}
      WAIT_BACKEND_TIMEOUT: 60
      CHECK_USER: ${POSTGRES_USER}
      CHECK_PASSWORD: ${POSTGRES_PASSWORD}
      CHECK_PGCONNECT_TIMEOUT: 3
      SSH_ENABLE: 1
      DB_USERS: ${POSTGRES_USER}:${POSTGRES_PASSWORD}
      BACKENDS: "0:pgmaster:5432:1:/var/lib/postgresql/data:ALLOW_TO_FAILOVER,1:pgslave::::"
      REQUIRE_MIN_BACKENDS: 1
      CONFIGS: "num_init_children:250,max_pool:4"
    ports:
      - 5430:5432
      - 9898:9898
    networks:
      - postgres-network
    depends_on:
      - "pgmaster"
      - "pgslave"

  pgbackup:
    image: xingjiudong/pg_dump:${PG_DUMP_VERSION}
    environment:
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - CRON_SCHEDULE=${CRON_SCHEDULE} 
      - DELETE_OLDER_THAN=${DELETE_OLDER_THAN}
      - PGDB=${POSTGRES_DB}
      - PGHOST=pgpool
    networks:
      - postgres-network
    depends_on:
      - "pgpool"
    command: dump-cron
